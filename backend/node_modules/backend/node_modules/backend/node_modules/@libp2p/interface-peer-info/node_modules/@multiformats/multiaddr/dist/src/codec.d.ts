import type { StringTuple, Tuple } from './index.js';
export interface MultiaddrParts {
    bytes: Uint8Array;
    string: string;
    tuples: Tuple[];
    stringTuples: StringTuple[];
    path: string | null;
}
export declare function stringToMultiaddrParts(str: string): MultiaddrParts;
export declare function bytesToMultiaddrParts(bytes: Uint8Array): MultiaddrParts;
/**
 * [[num code, str value?]... ] -> Tuple[]
 */
export declare function stringTuplesToTuples(stringTuples: StringTuple[]): Tuple[];
/**
 * [[int code, Uint8Array ]... ] -> Uint8Array
 */
export declare function tuplesToBytes(tuples: Tuple[]): Uint8Array;
export declare function bytesToTuples(buf: Uint8Array): Tuple[];
export declare function cleanPath(str: string): string;
export declare class ParseError extends Error {
    static name: string;
    name: string;
    constructor(str: string);
}
//# sourceMappingURL=codec.d.ts.map